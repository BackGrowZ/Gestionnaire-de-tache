{"version":3,"sources":["component/boards/Board.js","component/boards/Data.js","component/carte/Carte.js","component/liste/Liste.js","component/liste/Data.js","App.js","serviceWorker.js","index.js"],"names":["Board","className","href","this","props","id","style","color","label","Component","Data","context","state","user","name","board","owner","modal","newBoardLabel","onChange","e","setState","target","value","onSubmit","preventDefault","uuid","handleShow","bind","handleClose","map","tableau","key","onClick","cursor","Modal","show","onHide","Header","closeButton","Title","Body","htmlFor","type","Footer","Button","variant","Carte","idListe","position","handleShowEditCard","Liste","handleShowEditeTitle","card","handleShowAddCard","DataListe","liste","listeChangeTitle","listeChangeId","listeAdd","titleEdit","event","modalEditCard","cardTitle","onChangeCardTitle","length","newListe","toString","newBoard","onSubmitCardAdd","newCard","modalAddCard","modalEditeTitle","onChangeEditTitle","onSubmitEditeTitle","onSubmitEditeCard","window","location","hash","slice","handleDeleteListe","splice","i","handleDeleteCard","handleCloseEditeTitle","handleCloseAddCard","handleCloseEditCard","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b2dc084f.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react'\n\nexport default class Board extends Component {\n  render() {\n    return (\n      <Fragment>\n        <div className=\"col-lg-3 mr-1 mt-1 py-4 text-center board\">\n          <a href={'/liste/'+this.props.id} style={{ color: 'white' }}>\n            {this.props.label}\n          </a>\n        </div>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport Board from './Board'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport uuid from 'uuid'\n\nexport default class Data extends Component {\n  state = {\n    user: [\n      {\n        id: 0,\n        name: 'BackGrowZ',\n      }\n    ],\n    board: [\n      {\n        id: '6a71eaa-0e8-8751-a04f-aaee4bc71cd',\n        label: 'tableau 1',\n        owner: 0,\n      },\n      {\n        id: '5e500d4-a88-043d-2115-70e7e685bc06',\n        label: 'tableau 2',\n        owner: 0,\n      },\n      {\n        id: '7b806f-2b66-e2d5-5bad-67f2c406b3a',\n        label: 'tableau 3',\n        owner: 0,\n      },\n      {\n        id: '1dbd5ca-73-b653-b43-760724de3db7',\n        label: 'tableau 4',\n        owner: 0,\n      }\n    ],\n    modal: false,\n    newBoardLabel: ''\n  }\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClose() {\n    this.setState({ modal: false });\n  }\n\n  handleShow() {\n    this.setState({ modal: true });\n  }\n\n  onChange = (e) => {\n    this.setState({\n      newBoardLabel: e.target.value\n    })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault()\n    if (this.state.newBoardLabel !== '') {\n      this.setState({\n        board: [...this.state.board,\n        {\n          id: uuid(),\n          label: this.state.newBoardLabel\n        }\n        ]\n      })\n      this.setState({ newBoardLabel: '' });\n      this.setState({ modal: false });\n    }\n\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"App\">\n          <div className=\"container mt-5\">\n          <h1>Mes tableaux</h1>\n            <div className=\"row\">\n              {this.state.board.map(tableau => (\n                <Board\n                  key={tableau.id}\n                  id={tableau.id}\n                  label={tableau.label}\n                  owner={tableau.owner}\n                />\n              ))}\n\n              <div className=\"col-lg-3 mr-1 mt-1 py-4 text-center creat-board\">\n                <p\n                  onClick={this.handleShow}\n                  href=\"#\"\n                  style={{\n                    color: 'white',\n                    cursor: 'pointer'\n                  }}\n                >\n                  <i className=\"fas fa-plus\"></i>\n                  &nbsp;Créer tableau\n                </p>\n              </div>\n\n              <Modal show={this.state.modal} onHide={this.handleClose}>\n                <Modal.Header closeButton>\n                  <Modal.Title>Créer un nouveau tableau</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <form onSubmit={this.onSubmit} >\n                    <div className=\"form-group\">\n                      <label htmlFor=\"recipient-name\" className=\"col-form-label\">Nom du tableau:</label>\n                      <input type=\"text\" className=\"form-control\" name='nom' id=\"recipient-name\" onChange={this.onChange} value={this.state.newBoardLabel} />\n                    </div>\n                  </form>\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={this.handleClose}>\n                    Annuler\n                  </Button>\n                  <Button variant=\"primary\" onClick={this.onSubmit}>\n                    Créer tableau\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            </div>\n          </div>\n        </div>\n\n      </Fragment>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\n\nexport default class Carte extends Component {\n    render() {\n        return (\n            <Fragment>\n                <div className=\"carte pl-2 mt-1\">\n                    <a\n                        href={'#'+this.props.idListe}\n                        name={this.props.label}\n                        id={this.props.position}\n                        onClick={this.props.handleShowEditCard}\n                        style={{ cursor: \"pointer\" }}\n                    >\n                        {this.props.label}\n                    </a>\n                </div>\n                {/* {console.log(this.props.idListe)} */}\n            </Fragment>\n        )\n    }\n}\n","import React, { Fragment, Component } from 'react'\nimport Carte from '../carte/Carte'\n\nexport default class Liste extends Component {\n  render() {\n    return (\n      <Fragment>\n        <div className=\"col-lg-3 mr-1 mt-1 py-1 liste\" id={this.props.position}>\n          <form className=\"form-inline\">\n            <a\n              type=\"text\"\n              href=\"#EditListe\"\n              className='titleOfListe'\n              style={{ color: 'black', cursor: 'pointer' }}\n              name={this.props.label}\n              id={this.props.position}\n              onClick={this.props.handleShowEditeTitle}\n            >\n              {this.props.label}\n            </a>\n          </form>\n          {this.props.card.map(card => (\n              <Carte\n                key={card.id}\n                id={card.id}\n                label={card.label}\n                position={card.position}\n                idListe={this.props.position}\n                handleShowEditCard={this.props.handleShowEditCard}\n              />\n            ))\n          }\n          <div className=\"addCarte mt-2 texte-center\" id={this.props.position} onClick={this.props.handleShowAddCard} style={{ cursor: 'pointer' }}><b>+</b> Ajouter une autre carte</div>\n        </div>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport Liste from './Liste'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport uuid from 'uuid'\n\nexport default class DataListe extends Component {\n  state = {\n    board:\n    {\n      id: '6a71eaa-0e8-8751-a04f-aaee4bc71cd',\n      label: 'tableau 1',\n      liste: [\n        {\n          id: 'eeff73ef-2511-4fed-86b0-35ce0d3e49b0',\n          label: 'À faire',\n          position: '0',\n          card: [\n            {\n              id: '107582d2-3978-4bd6-82e2-95fd6b3b35e4',\n              label: 'Je suis la premiere carte',\n              position: 0\n            },\n            {\n              id: '53a39294-b073-4816-8987-4a5abaf52c09',\n              label: 'Je suis la deuxieme carte',\n              position: 1\n            }\n          ]\n        },\n        {\n          id: '54901f7c-ccf3-4e90-8ceb-4be9ac080763',\n          label: 'En cours',\n          position: '1',\n          card: [\n            {\n              id: '542a2e00-b1eb-46b0-936f-4ba60b31fde4',\n              label: 'Je suis la troisieme carte',\n              position: 0\n            }\n          ]\n        },\n        {\n          id: '549cebba-c575-46c0-8faf-7ba524516383',\n          label: 'Terminé',\n          position: '2',\n          card: [\n            {\n              id: '9ba2d1aa-a5b8-4a18-ae0b-a80a06907acb',\n              label: 'Je suis la quatrieme carte',\n              position: 0\n            }\n          ]\n        }\n      ]\n    },\n    listeChangeTitle: '',\n    listeChangeId: '',\n    listeAdd: '',\n    titleEdit: '',\n  }\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.handleShowEditeTitle = this.handleShowEditeTitle.bind(this);\n    this.handleCloseEditeTitle = this.handleCloseEditeTitle.bind(this);\n\n    this.handleShowAddCard = this.handleShowAddCard.bind(this);\n    this.handleCloseAddCard = this.handleCloseAddCard.bind(this);\n\n    this.handleShowEditCard = this.handleShowEditCard.bind(this);\n    this.handleCloseEditCard = this.handleCloseEditCard.bind(this);\n  }\n\n\n  handleClose() {\n    this.setState({ modal: false });\n  }\n\n  handleShow() {\n    this.setState({ modal: true });\n  }\n\n  handleCloseEditCard() {\n    this.setState({ modalEditCard: false });\n  }\n\n  handleShowEditCard = (event) => {\n    this.setState(\n      {\n        modalEditCard: true,\n        cardTitle: event.target.name,\n        listeChangeId: event.target.id\n      }\n    )\n\n  }\n\n  onChange = (e) => {\n    this.setState({\n      listeAdd: e.target.value\n    })\n  }\n\n  onChangeCardTitle = (e) => {\n    this.setState({\n      cardTitle: e.target.value\n    })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault()\n    const position = this.state.board.liste.length\n    if (this.state.listeAdd !== '') {\n      var newListe = [...this.state.board.liste, {\n        id: uuid(),\n        label: this.state.listeAdd,\n        position: position.toString(),\n        card: []\n      }]\n      var newBoard = this.state.board\n      newBoard.liste = [...newListe]\n      this.setState({\n\n        board: newBoard,\n        listeAdd: '',\n        modal: false\n      })\n    }\n  }\n\n  onSubmitCardAdd = (e) => {\n    e.preventDefault()\n    const position = this.state.board.liste[this.state.listeChangeId].card.length\n    if (this.state.cardTitle !== '') {\n      var newCard = [...this.state.board.liste[this.state.listeChangeId].card, {\n        id: uuid(),\n        label: this.state.cardTitle,\n        position: position,\n      }]\n\n      var newListe = this.state.board.liste\n      newListe[this.state.listeChangeId].card = newCard\n      var newBoard = this.state.board\n      newBoard.liste = [...newListe]\n      this.setState({\n\n        board: newBoard,\n        cardTitle: '',\n        listeChangeId: '',\n        modalAddCard: false\n      })\n    }\n  }\n\n  handleCloseAddCard() {\n    this.setState({ modalAddCard: false })\n  }\n\n  handleShowAddCard = (event) => {\n    this.setState(\n      {\n        modalAddCard: true,\n        titleEdit: event.target.name,\n        listeChangeId: event.target.id\n      }\n    )\n  }\n\n  handleCloseEditeTitle() {\n    this.setState({ modalEditeTitle: false })\n  }\n\n  handleShowEditeTitle = (event) => {\n    this.setState(\n      {\n        modalEditeTitle: true,\n        titleEdit: event.target.name,\n        listeChangeId: event.target.id\n      }\n    )\n  }\n\n  onChangeEditTitle = (e) => {\n    this.setState({\n      titleEdit: e.target.value\n    })\n  }\n\n  onSubmitEditeTitle = () => {\n    if (this.state.titleEdit !== '' && this.state.listeChangeId !== '') {\n      const newListe = this.state.board.liste\n      newListe[this.state.listeChangeId].label = this.state.titleEdit\n      var newBoard = this.state.board\n      newBoard.liste = [...newListe]\n\n      this.setState({\n        board: newBoard,\n        titleEdit: '',\n        listeChangeId: '',\n        modalEditeTitle: false\n      })\n    }\n  }\n\n  onSubmitEditeCard = () => {\n    if (this.state.cardTitle !== '' && this.state.listeChangeId !== '') {\n      const newListe = this.state.board.liste\n      newListe[window.location.hash.slice(1)].card[this.state.listeChangeId].label = this.state.cardTitle\n      var newBoard = this.state.board\n      newBoard.liste = [...newListe]\n\n      this.setState({\n        board: newBoard,\n        cardTitle: '',\n        listeChangeId: '',\n        modalEditCard: false\n      })\n    }\n  }\n\n  handleDeleteListe = () => {\n    var newListe = this.state.board.liste\n    newListe.splice(this.state.listeChangeId, 1)\n    var newBoard = this.state.board\n    newBoard.liste = [...newListe]\n\n    for (let i = 0; i < newListe.length; i++) {\n      newListe[i].position = i.toString()\n    }\n    this.setState({\n      board: newBoard,\n      titleEdit: '',\n      listeChangeId: '',\n      modalEditeTitle: false\n    })\n\n  }\n\n  handleDeleteCard = () => {\n    var newListe = this.state.board.liste\n    newListe[window.location.hash.slice(1)].card.splice(this.state.listeChangeId, 1)\n    var newBoard = this.state.board\n    newBoard.liste = [...newListe]\n\n     for (let i = 0; i < newListe[window.location.hash.slice(1)].card.length; i++) {\n       newListe[window.location.hash.slice(1)].card[i].position = i.toString()\n    }\n    this.setState({\n      board: newBoard,\n      titleEdit: '',\n      listeChangeId: '',\n      modalEditCard: false\n    })\n\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className='board-list pl-2'>\n          {this.state.board.liste.map(liste => (\n            <Liste\n              key={liste.id}\n              id={liste.id}\n              label={liste.label}\n              position={liste.position}\n              handleShowEditeTitle={this.handleShowEditeTitle}\n              handleShowAddCard={this.handleShowAddCard}\n              handleShowEditCard={this.handleShowEditCard}\n              card={liste.card}\n              state={this.state}\n            />\n          ))}\n\n          <div className=\"col-lg-3 mr-1 mt-1 py-1 addListe\">\n            <div className=\"mt-2 texte-center\" onClick={this.handleShow} style={{ cursor: 'pointer' }}><b>+</b> Ajouter une autre liste</div>\n          </div>\n        </div>\n\n        {/* Modal ADD Liste */}\n        <Modal show={this.state.modal} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Créer une nouvelle liste</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={this.onSubmit} >\n              <div className=\"form-group\">\n                <label htmlFor=\"recipient-name\" className=\"col-form-label\">Nom de la liste:</label>\n                <input type=\"text\" className=\"form-control\" name='nom' id={this.state.listeChangeTitle} onChange={this.onChange} value={this.state.listeAdd} />\n              </div>\n            </form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={this.onSubmit}>Créer liste</Button>\n            <Button variant=\"secondary\" onClick={this.handleClose}>Annuler</Button>\n          </Modal.Footer>\n        </Modal>\n\n        {/* Modal Edit Liste */}\n        <Modal show={this.state.modalEditeTitle} onHide={this.handleCloseEditeTitle}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edité la liste</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={this.onSubmitEditeTitle} >\n              <div className=\"form-group\">\n                <label htmlFor=\"recipient-name\" className=\"col-form-label\">Nom de la liste:</label>\n                <input type=\"text\" className=\"form-control\" name={this.props.label} id={this.state.listeChangeTitle} onChange={this.onChangeEditTitle} value={this.state.titleEdit} />\n              </div>\n            </form>\n            <center>\n            </center>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={this.onSubmitEditeTitle}>Sauvegarder</Button>\n            <Button variant=\"danger\" onClick={this.handleDeleteListe}>Supprimer</Button>\n            <Button variant=\"secondary\" onClick={this.handleCloseEditeTitle}>Annuler</Button>\n          </Modal.Footer>\n        </Modal>\n\n\n        {/* Modal Add Card */}\n        <Modal show={this.state.modalAddCard} onHide={this.handleCloseAddCard}>\n          <Modal.Header closeButton>\n            <Modal.Title>Créer une nouvelle Carte</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={this.onSubmitCardAdd} >\n              <div className=\"form-group\">\n                <label htmlFor=\"recipient-name\" className=\"col-form-label\">Nom de la liste:</label>\n                <input type=\"text\" className=\"form-control\" name='nom' id={this.state.listeChangeTitle} onChange={this.onChangeCardTitle} value={this.state.cardTitle} />\n              </div>\n            </form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={this.onSubmitCardAdd}>Créer carte</Button>\n            <Button variant=\"secondary\" onClick={this.handleCloseAddCard}>Annuler</Button>\n          </Modal.Footer>\n        </Modal>\n\n\n        {/* Modal Edit Card */}\n        <Modal show={this.state.modalEditCard} onHide={this.handleCloseEditCard}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modifier la carte</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={this.onSubmitEditeCard} >\n              <div className=\"form-group\">\n                <label htmlFor=\"recipient-name\" className=\"col-form-label\">Nom de la Carte:</label>\n                <input type=\"text\" className=\"form-control\" name={this.props.label} id={this.state.listeChangeTitle} onChange={this.onChangeCardTitle} value={this.state.cardTitle} />\n              </div>\n            </form>\n            <center>\n            </center>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={this.onSubmitEditeCard}>Sauvegarder</Button>\n            <Button variant=\"danger\" onClick={this.handleDeleteCard}>Supprimer</Button>\n            <Button variant=\"secondary\" onClick={this.handleCloseEditCard}>Annuler</Button>\n          </Modal.Footer>\n        </Modal>\n\n      </Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Data from './component/boards/Data'\nimport DataListe from './component/liste/Data'\nimport './component/boards/board.css'\nimport './component/liste/liste.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route exact path='/' component={Data}/>\n        <Route exact path='/liste/:id' component={DataListe}/>\n      </Router>\n\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}